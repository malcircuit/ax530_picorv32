# TCL File Generated by Component Editor 21.1
# Fri Aug 26 17:29:06 CDT 2022
# DO NOT MODIFY


# 
# picorv32_axi "PicoRV32 AXI Core" v1.0
#  2022.08.26.17:29:06
# A Size-Optimized RISC-V CPU
# 

# 
# request TCL package from ACDS 16.1
# 
package require -exact qsys 16.1


# 
# module picorv32_axi
# 
set_module_property DESCRIPTION "A Size-Optimized RISC-V CPU"
set_module_property NAME picorv32_axi
set_module_property VERSION 1.0
set_module_property INTERNAL false
set_module_property OPAQUE_ADDRESS_MAP true
set_module_property AUTHOR ""
set_module_property DISPLAY_NAME "PicoRV32 AXI Core"
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE true
set_module_property REPORT_TO_TALKBACK false
set_module_property ALLOW_GREYBOX_GENERATION false
set_module_property REPORT_HIERARCHY false


# 
# file sets
# 
add_fileset QUARTUS_SYNTH QUARTUS_SYNTH "" ""
set_fileset_property QUARTUS_SYNTH TOP_LEVEL picorv32_axi
set_fileset_property QUARTUS_SYNTH ENABLE_RELATIVE_INCLUDE_PATHS false
set_fileset_property QUARTUS_SYNTH ENABLE_FILE_OVERWRITE_MODE false
add_fileset_file picorv32.v VERILOG PATH ../picorv32/picorv32.v TOP_LEVEL_FILE

add_fileset SIM_VERILOG SIM_VERILOG "" ""
set_fileset_property SIM_VERILOG ENABLE_RELATIVE_INCLUDE_PATHS false
set_fileset_property SIM_VERILOG ENABLE_FILE_OVERWRITE_MODE true
add_fileset_file picorv32.v VERILOG PATH ../picorv32/picorv32.v


# 
# documentation links
# 
add_documentation_link GitHub https://github.com/YosysHQ/picorv32


# 
# parameters
# 
add_parameter ENABLE_COUNTERS STD_LOGIC_VECTOR 1 "This parameter enables support for the RDCYCLE\[H], RDTIME\[H], and RDINSTRET\[H] instructions. This instructions will cause a hardware trap (like any other unsupported instruction) if ENABLE_COUNTERS is set to zero."
set_parameter_property ENABLE_COUNTERS DEFAULT_VALUE 1
set_parameter_property ENABLE_COUNTERS DISPLAY_NAME ENABLE_COUNTERS
set_parameter_property ENABLE_COUNTERS WIDTH 2
set_parameter_property ENABLE_COUNTERS TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_COUNTERS UNITS None
set_parameter_property ENABLE_COUNTERS ALLOWED_RANGES 0:3
set_parameter_property ENABLE_COUNTERS DESCRIPTION "This parameter enables support for the RDCYCLE\[H], RDTIME\[H], and RDINSTRET\[H] instructions. This instructions will cause a hardware trap (like any other unsupported instruction) if ENABLE_COUNTERS is set to zero."
set_parameter_property ENABLE_COUNTERS HDL_PARAMETER true
add_parameter ENABLE_COUNTERS64 STD_LOGIC_VECTOR 1 "This parameter enables support for the RDCYCLEH, RDTIMEH, and RDINSTRETH instructions. If this parameter is set to 0, and ENABLE_COUNTERS is set to 1, then only the RDCYCLE, RDTIME, and RDINSTRET instructions are available."
set_parameter_property ENABLE_COUNTERS64 DEFAULT_VALUE 1
set_parameter_property ENABLE_COUNTERS64 DISPLAY_NAME ENABLE_COUNTERS64
set_parameter_property ENABLE_COUNTERS64 WIDTH 2
set_parameter_property ENABLE_COUNTERS64 TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_COUNTERS64 UNITS None
set_parameter_property ENABLE_COUNTERS64 ALLOWED_RANGES 0:3
set_parameter_property ENABLE_COUNTERS64 DESCRIPTION "This parameter enables support for the RDCYCLEH, RDTIMEH, and RDINSTRETH instructions. If this parameter is set to 0, and ENABLE_COUNTERS is set to 1, then only the RDCYCLE, RDTIME, and RDINSTRET instructions are available."
set_parameter_property ENABLE_COUNTERS64 HDL_PARAMETER true
add_parameter ENABLE_REGS_16_31 STD_LOGIC_VECTOR 1 "This parameter enables support for registers the x16..x31. The RV32E ISA excludes this registers. However, the RV32E ISA spec requires a hardware trap for when code tries to access this registers. This is not implemented in PicoRV32."
set_parameter_property ENABLE_REGS_16_31 DEFAULT_VALUE 1
set_parameter_property ENABLE_REGS_16_31 DISPLAY_NAME ENABLE_REGS_16_31
set_parameter_property ENABLE_REGS_16_31 WIDTH 2
set_parameter_property ENABLE_REGS_16_31 TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_REGS_16_31 UNITS None
set_parameter_property ENABLE_REGS_16_31 ALLOWED_RANGES 0:3
set_parameter_property ENABLE_REGS_16_31 DESCRIPTION "This parameter enables support for registers the x16..x31. The RV32E ISA excludes this registers. However, the RV32E ISA spec requires a hardware trap for when code tries to access this registers. This is not implemented in PicoRV32."
set_parameter_property ENABLE_REGS_16_31 HDL_PARAMETER true
add_parameter ENABLE_REGS_DUALPORT STD_LOGIC_VECTOR 1 "The register file can be implemented with two or one read ports. A dual ported register file improves performance a bit, but can also increase the size of the core."
set_parameter_property ENABLE_REGS_DUALPORT DEFAULT_VALUE 1
set_parameter_property ENABLE_REGS_DUALPORT DISPLAY_NAME ENABLE_REGS_DUALPORT
set_parameter_property ENABLE_REGS_DUALPORT WIDTH 2
set_parameter_property ENABLE_REGS_DUALPORT TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_REGS_DUALPORT UNITS None
set_parameter_property ENABLE_REGS_DUALPORT ALLOWED_RANGES 0:3
set_parameter_property ENABLE_REGS_DUALPORT DESCRIPTION "The register file can be implemented with two or one read ports. A dual ported register file improves performance a bit, but can also increase the size of the core."
set_parameter_property ENABLE_REGS_DUALPORT HDL_PARAMETER true
add_parameter TWO_STAGE_SHIFT STD_LOGIC_VECTOR 1 "This speeds up shift operations, but adds additional hardware. Set this parameter to 0 to disable the two-stage shift to further reduce the size of the core."
set_parameter_property TWO_STAGE_SHIFT DEFAULT_VALUE 1
set_parameter_property TWO_STAGE_SHIFT DISPLAY_NAME TWO_STAGE_SHIFT
set_parameter_property TWO_STAGE_SHIFT WIDTH 2
set_parameter_property TWO_STAGE_SHIFT TYPE STD_LOGIC_VECTOR
set_parameter_property TWO_STAGE_SHIFT UNITS None
set_parameter_property TWO_STAGE_SHIFT ALLOWED_RANGES 0:3
set_parameter_property TWO_STAGE_SHIFT DESCRIPTION "This speeds up shift operations, but adds additional hardware. Set this parameter to 0 to disable the two-stage shift to further reduce the size of the core."
set_parameter_property TWO_STAGE_SHIFT HDL_PARAMETER true
add_parameter BARREL_SHIFTER STD_LOGIC_VECTOR 0 "By default shift operations are performed by successively shifting by a small amount (see TWO_STAGE_SHIFT above). With this option set, a barrel shifter is used instead."
set_parameter_property BARREL_SHIFTER DEFAULT_VALUE 0
set_parameter_property BARREL_SHIFTER DISPLAY_NAME BARREL_SHIFTER
set_parameter_property BARREL_SHIFTER WIDTH 2
set_parameter_property BARREL_SHIFTER TYPE STD_LOGIC_VECTOR
set_parameter_property BARREL_SHIFTER UNITS None
set_parameter_property BARREL_SHIFTER ALLOWED_RANGES 0:3
set_parameter_property BARREL_SHIFTER DESCRIPTION "By default shift operations are performed by successively shifting by a small amount (see TWO_STAGE_SHIFT above). With this option set, a barrel shifter is used instead."
set_parameter_property BARREL_SHIFTER HDL_PARAMETER true
add_parameter TWO_CYCLE_COMPARE STD_LOGIC_VECTOR 0 "This relaxes the longest data path a bit by adding an additional FF stage at the cost of adding an additional clock cycle delay to the conditional branch instructions."
set_parameter_property TWO_CYCLE_COMPARE DEFAULT_VALUE 0
set_parameter_property TWO_CYCLE_COMPARE DISPLAY_NAME TWO_CYCLE_COMPARE
set_parameter_property TWO_CYCLE_COMPARE WIDTH 2
set_parameter_property TWO_CYCLE_COMPARE TYPE STD_LOGIC_VECTOR
set_parameter_property TWO_CYCLE_COMPARE UNITS None
set_parameter_property TWO_CYCLE_COMPARE ALLOWED_RANGES 0:3
set_parameter_property TWO_CYCLE_COMPARE DESCRIPTION "This relaxes the longest data path a bit by adding an additional FF stage at the cost of adding an additional clock cycle delay to the conditional branch instructions."
set_parameter_property TWO_CYCLE_COMPARE HDL_PARAMETER true
add_parameter TWO_CYCLE_ALU STD_LOGIC_VECTOR 0 "This adds an additional FF stage in the ALU data path, improving timing at the cost of an additional clock cycle for all instructions that use the ALU."
set_parameter_property TWO_CYCLE_ALU DEFAULT_VALUE 0
set_parameter_property TWO_CYCLE_ALU DISPLAY_NAME TWO_CYCLE_ALU
set_parameter_property TWO_CYCLE_ALU WIDTH 2
set_parameter_property TWO_CYCLE_ALU TYPE STD_LOGIC_VECTOR
set_parameter_property TWO_CYCLE_ALU UNITS None
set_parameter_property TWO_CYCLE_ALU ALLOWED_RANGES 0:3
set_parameter_property TWO_CYCLE_ALU DESCRIPTION "This adds an additional FF stage in the ALU data path, improving timing at the cost of an additional clock cycle for all instructions that use the ALU."
set_parameter_property TWO_CYCLE_ALU HDL_PARAMETER true
add_parameter COMPRESSED_ISA STD_LOGIC_VECTOR 0 "This enables support for the RISC-V Compressed Instruction Set."
set_parameter_property COMPRESSED_ISA DEFAULT_VALUE 0
set_parameter_property COMPRESSED_ISA DISPLAY_NAME COMPRESSED_ISA
set_parameter_property COMPRESSED_ISA WIDTH 2
set_parameter_property COMPRESSED_ISA TYPE STD_LOGIC_VECTOR
set_parameter_property COMPRESSED_ISA UNITS None
set_parameter_property COMPRESSED_ISA ALLOWED_RANGES 0:3
set_parameter_property COMPRESSED_ISA DESCRIPTION "This enables support for the RISC-V Compressed Instruction Set."
set_parameter_property COMPRESSED_ISA HDL_PARAMETER true
add_parameter CATCH_MISALIGN STD_LOGIC_VECTOR 1 "Set this to 0 to disable the circuitry for catching misaligned memory accesses."
set_parameter_property CATCH_MISALIGN DEFAULT_VALUE 1
set_parameter_property CATCH_MISALIGN DISPLAY_NAME CATCH_MISALIGN
set_parameter_property CATCH_MISALIGN WIDTH 2
set_parameter_property CATCH_MISALIGN TYPE STD_LOGIC_VECTOR
set_parameter_property CATCH_MISALIGN UNITS None
set_parameter_property CATCH_MISALIGN ALLOWED_RANGES 0:3
set_parameter_property CATCH_MISALIGN DESCRIPTION "Set this to 0 to disable the circuitry for catching misaligned memory accesses."
set_parameter_property CATCH_MISALIGN HDL_PARAMETER true
add_parameter CATCH_ILLINSN STD_LOGIC_VECTOR 1 "Set this to 0 to disable the circuitry for catching illegal instructions."
set_parameter_property CATCH_ILLINSN DEFAULT_VALUE 1
set_parameter_property CATCH_ILLINSN DISPLAY_NAME CATCH_ILLINSN
set_parameter_property CATCH_ILLINSN WIDTH 2
set_parameter_property CATCH_ILLINSN TYPE STD_LOGIC_VECTOR
set_parameter_property CATCH_ILLINSN UNITS None
set_parameter_property CATCH_ILLINSN ALLOWED_RANGES 0:3
set_parameter_property CATCH_ILLINSN DESCRIPTION "Set this to 0 to disable the circuitry for catching illegal instructions."
set_parameter_property CATCH_ILLINSN HDL_PARAMETER true
add_parameter ENABLE_PCPI STD_LOGIC_VECTOR 0 "Set this to 1 to enable the Pico Co-Processor Interface (PCPI)."
set_parameter_property ENABLE_PCPI DEFAULT_VALUE 0
set_parameter_property ENABLE_PCPI DISPLAY_NAME ENABLE_PCPI
set_parameter_property ENABLE_PCPI WIDTH 2
set_parameter_property ENABLE_PCPI TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_PCPI UNITS None
set_parameter_property ENABLE_PCPI ALLOWED_RANGES 0:3
set_parameter_property ENABLE_PCPI DESCRIPTION "Set this to 1 to enable the Pico Co-Processor Interface (PCPI)."
set_parameter_property ENABLE_PCPI HDL_PARAMETER true
add_parameter ENABLE_MUL STD_LOGIC_VECTOR 0 "This parameter internally enables PCPI and instantiates the picorv32_pcpi_mul core that implements the MUL\[H\[SU|U]] instructions. The external PCPI interface only becomes functional when ENABLE_PCPI is set as well."
set_parameter_property ENABLE_MUL DEFAULT_VALUE 0
set_parameter_property ENABLE_MUL DISPLAY_NAME ENABLE_MUL
set_parameter_property ENABLE_MUL WIDTH 2
set_parameter_property ENABLE_MUL TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_MUL UNITS None
set_parameter_property ENABLE_MUL ALLOWED_RANGES 0:3
set_parameter_property ENABLE_MUL DESCRIPTION "This parameter internally enables PCPI and instantiates the picorv32_pcpi_mul core that implements the MUL\[H\[SU|U]] instructions. The external PCPI interface only becomes functional when ENABLE_PCPI is set as well."
set_parameter_property ENABLE_MUL HDL_PARAMETER true
add_parameter ENABLE_FAST_MUL STD_LOGIC_VECTOR 0 "This parameter internally enables PCPI and instantiates the picorv32_pcpi_fast_mul core that implements the MUL\[H\[SU|U]] instructions. The external PCPI interface only becomes functional when ENABLE_PCPI is set as well."
set_parameter_property ENABLE_FAST_MUL DEFAULT_VALUE 0
set_parameter_property ENABLE_FAST_MUL DISPLAY_NAME ENABLE_FAST_MUL
set_parameter_property ENABLE_FAST_MUL WIDTH 2
set_parameter_property ENABLE_FAST_MUL TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_FAST_MUL UNITS None
set_parameter_property ENABLE_FAST_MUL ALLOWED_RANGES 0:3
set_parameter_property ENABLE_FAST_MUL DESCRIPTION "This parameter internally enables PCPI and instantiates the picorv32_pcpi_fast_mul core that implements the MUL\[H\[SU|U]] instructions. The external PCPI interface only becomes functional when ENABLE_PCPI is set as well."
set_parameter_property ENABLE_FAST_MUL HDL_PARAMETER true
add_parameter ENABLE_DIV STD_LOGIC_VECTOR 0 "This parameter internally enables PCPI and instantiates the picorv32_pcpi_div core that implements the DIV\[U]/REM\[U] instructions. The external PCPI interface only becomes functional when ENABLE_PCPI is set as well"
set_parameter_property ENABLE_DIV DEFAULT_VALUE 0
set_parameter_property ENABLE_DIV DISPLAY_NAME ENABLE_DIV
set_parameter_property ENABLE_DIV WIDTH 2
set_parameter_property ENABLE_DIV TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_DIV UNITS None
set_parameter_property ENABLE_DIV ALLOWED_RANGES 0:3
set_parameter_property ENABLE_DIV DESCRIPTION "This parameter internally enables PCPI and instantiates the picorv32_pcpi_div core that implements the DIV\[U]/REM\[U] instructions. The external PCPI interface only becomes functional when ENABLE_PCPI is set as well"
set_parameter_property ENABLE_DIV HDL_PARAMETER true
add_parameter ENABLE_IRQ STD_LOGIC_VECTOR 0 "Set this to 1 to enable IRQs. (see \"Custom Instructions for IRQ Handling\" below for a discussion of IRQs)"
set_parameter_property ENABLE_IRQ DEFAULT_VALUE 0
set_parameter_property ENABLE_IRQ DISPLAY_NAME ENABLE_IRQ
set_parameter_property ENABLE_IRQ WIDTH 2
set_parameter_property ENABLE_IRQ TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_IRQ UNITS None
set_parameter_property ENABLE_IRQ ALLOWED_RANGES 0:3
set_parameter_property ENABLE_IRQ DESCRIPTION "Set this to 1 to enable IRQs. (see \"Custom Instructions for IRQ Handling\" below for a discussion of IRQs)"
set_parameter_property ENABLE_IRQ HDL_PARAMETER true
add_parameter ENABLE_IRQ_QREGS STD_LOGIC_VECTOR 1 "Set this to 0 to disable support for the getq and setq instructions."
set_parameter_property ENABLE_IRQ_QREGS DEFAULT_VALUE 1
set_parameter_property ENABLE_IRQ_QREGS DISPLAY_NAME ENABLE_IRQ_QREGS
set_parameter_property ENABLE_IRQ_QREGS WIDTH 2
set_parameter_property ENABLE_IRQ_QREGS TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_IRQ_QREGS UNITS None
set_parameter_property ENABLE_IRQ_QREGS ALLOWED_RANGES 0:3
set_parameter_property ENABLE_IRQ_QREGS DESCRIPTION "Set this to 0 to disable support for the getq and setq instructions."
set_parameter_property ENABLE_IRQ_QREGS HDL_PARAMETER true
add_parameter ENABLE_IRQ_TIMER STD_LOGIC_VECTOR 1 "Set this to 0 to disable support for the timer instruction."
set_parameter_property ENABLE_IRQ_TIMER DEFAULT_VALUE 1
set_parameter_property ENABLE_IRQ_TIMER DISPLAY_NAME ENABLE_IRQ_TIMER
set_parameter_property ENABLE_IRQ_TIMER WIDTH 2
set_parameter_property ENABLE_IRQ_TIMER TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_IRQ_TIMER UNITS None
set_parameter_property ENABLE_IRQ_TIMER ALLOWED_RANGES 0:3
set_parameter_property ENABLE_IRQ_TIMER DESCRIPTION "Set this to 0 to disable support for the timer instruction."
set_parameter_property ENABLE_IRQ_TIMER HDL_PARAMETER true
add_parameter ENABLE_TRACE STD_LOGIC_VECTOR 0 "Produce an execution trace using the trace_valid and trace_data output ports. For a demontration of this feature run make test_vcd to create a trace file and then run python3 showtrace.py testbench.trace firmware/firmware.elf to decode it."
set_parameter_property ENABLE_TRACE DEFAULT_VALUE 0
set_parameter_property ENABLE_TRACE DISPLAY_NAME ENABLE_TRACE
set_parameter_property ENABLE_TRACE WIDTH 2
set_parameter_property ENABLE_TRACE TYPE STD_LOGIC_VECTOR
set_parameter_property ENABLE_TRACE UNITS None
set_parameter_property ENABLE_TRACE ALLOWED_RANGES 0:3
set_parameter_property ENABLE_TRACE DESCRIPTION "Produce an execution trace using the trace_valid and trace_data output ports. For a demontration of this feature run make test_vcd to create a trace file and then run python3 showtrace.py testbench.trace firmware/firmware.elf to decode it."
set_parameter_property ENABLE_TRACE HDL_PARAMETER true
add_parameter REGS_INIT_ZERO STD_LOGIC_VECTOR 0 "Set this to 1 to initialize all registers to zero (using a Verilog initial block). This can be useful for simulation or formal verification."
set_parameter_property REGS_INIT_ZERO DEFAULT_VALUE 0
set_parameter_property REGS_INIT_ZERO DISPLAY_NAME REGS_INIT_ZERO
set_parameter_property REGS_INIT_ZERO WIDTH 2
set_parameter_property REGS_INIT_ZERO TYPE STD_LOGIC_VECTOR
set_parameter_property REGS_INIT_ZERO UNITS None
set_parameter_property REGS_INIT_ZERO ALLOWED_RANGES 0:3
set_parameter_property REGS_INIT_ZERO DESCRIPTION "Set this to 1 to initialize all registers to zero (using a Verilog initial block). This can be useful for simulation or formal verification."
set_parameter_property REGS_INIT_ZERO HDL_PARAMETER true
add_parameter MASKED_IRQ STD_LOGIC_VECTOR 0 "A 1 bit in this bitmask corresponds to a permanently disabled IRQ."
set_parameter_property MASKED_IRQ DEFAULT_VALUE 0
set_parameter_property MASKED_IRQ DISPLAY_NAME MASKED_IRQ
set_parameter_property MASKED_IRQ WIDTH 34
set_parameter_property MASKED_IRQ TYPE STD_LOGIC_VECTOR
set_parameter_property MASKED_IRQ UNITS None
set_parameter_property MASKED_IRQ ALLOWED_RANGES 0:17179869183
set_parameter_property MASKED_IRQ DESCRIPTION "A 1 bit in this bitmask corresponds to a permanently disabled IRQ."
set_parameter_property MASKED_IRQ HDL_PARAMETER true
add_parameter LATCHED_IRQ STD_LOGIC_VECTOR 4294967295 "A 1 bit in this bitmask indicates that the corresponding IRQ is \"latched\", i.e. when the IRQ line is high for only one cycle, the interrupt will be marked as pending and stay pending until the interrupt handler is called (aka \"pulse interrupts\" or \"edge-triggered interrupts\")."
set_parameter_property LATCHED_IRQ DEFAULT_VALUE 4294967295
set_parameter_property LATCHED_IRQ DISPLAY_NAME LATCHED_IRQ
set_parameter_property LATCHED_IRQ WIDTH 34
set_parameter_property LATCHED_IRQ TYPE STD_LOGIC_VECTOR
set_parameter_property LATCHED_IRQ UNITS None
set_parameter_property LATCHED_IRQ ALLOWED_RANGES 0:17179869183
set_parameter_property LATCHED_IRQ DESCRIPTION "A 1 bit in this bitmask indicates that the corresponding IRQ is \"latched\", i.e. when the IRQ line is high for only one cycle, the interrupt will be marked as pending and stay pending until the interrupt handler is called (aka \"pulse interrupts\" or \"edge-triggered interrupts\")."
set_parameter_property LATCHED_IRQ HDL_PARAMETER true
add_parameter PROGADDR_RESET STD_LOGIC_VECTOR 0 "The start address of the program."
set_parameter_property PROGADDR_RESET DEFAULT_VALUE 0
set_parameter_property PROGADDR_RESET DISPLAY_NAME PROGADDR_RESET
set_parameter_property PROGADDR_RESET WIDTH 34
set_parameter_property PROGADDR_RESET TYPE STD_LOGIC_VECTOR
set_parameter_property PROGADDR_RESET UNITS None
set_parameter_property PROGADDR_RESET ALLOWED_RANGES 0:17179869183
set_parameter_property PROGADDR_RESET DESCRIPTION "The start address of the program."
set_parameter_property PROGADDR_RESET HDL_PARAMETER true
add_parameter PROGADDR_IRQ STD_LOGIC_VECTOR 16 "The start address of the interrupt handler."
set_parameter_property PROGADDR_IRQ DEFAULT_VALUE 16
set_parameter_property PROGADDR_IRQ DISPLAY_NAME PROGADDR_IRQ
set_parameter_property PROGADDR_IRQ WIDTH 34
set_parameter_property PROGADDR_IRQ TYPE STD_LOGIC_VECTOR
set_parameter_property PROGADDR_IRQ UNITS None
set_parameter_property PROGADDR_IRQ ALLOWED_RANGES 0:17179869183
set_parameter_property PROGADDR_IRQ DESCRIPTION "The start address of the interrupt handler."
set_parameter_property PROGADDR_IRQ HDL_PARAMETER true
add_parameter STACKADDR STD_LOGIC_VECTOR 4294967295 "When this parameter has a value different from 0xffffffff, then register x2 (the stack pointer) is initialized to this value on reset. (All other registers remain uninitialized.) Note that the RISC-V calling convention requires the stack pointer to be aligned on 16 bytes boundaries (4 bytes for the RV32I soft float calling convention)."
set_parameter_property STACKADDR DEFAULT_VALUE 4294967295
set_parameter_property STACKADDR DISPLAY_NAME STACKADDR
set_parameter_property STACKADDR WIDTH 34
set_parameter_property STACKADDR TYPE STD_LOGIC_VECTOR
set_parameter_property STACKADDR UNITS None
set_parameter_property STACKADDR ALLOWED_RANGES 0:17179869183
set_parameter_property STACKADDR DESCRIPTION "When this parameter has a value different from 0xffffffff, then register x2 (the stack pointer) is initialized to this value on reset. (All other registers remain uninitialized.) Note that the RISC-V calling convention requires the stack pointer to be aligned on 16 bytes boundaries (4 bytes for the RV32I soft float calling convention)."
set_parameter_property STACKADDR HDL_PARAMETER true


# 
# display items
# 


# 
# connection point debug
# 
add_interface debug conduit end
set_interface_property debug associatedClock clk
set_interface_property debug associatedReset ""
set_interface_property debug ENABLED true
set_interface_property debug EXPORT_OF ""
set_interface_property debug PORT_NAME_MAP ""
set_interface_property debug CMSIS_SVD_VARIABLES ""
set_interface_property debug SVD_ADDRESS_GROUP ""

add_interface_port debug trace_data trace_data Output 36
add_interface_port debug trace_valid trace_valid Output 1
add_interface_port debug trap trap Output 1


# 
# connection point interrupt
# 
add_interface interrupt conduit end
set_interface_property interrupt associatedClock clk
set_interface_property interrupt associatedReset ""
set_interface_property interrupt ENABLED true
set_interface_property interrupt EXPORT_OF ""
set_interface_property interrupt PORT_NAME_MAP ""
set_interface_property interrupt CMSIS_SVD_VARIABLES ""
set_interface_property interrupt SVD_ADDRESS_GROUP ""

add_interface_port interrupt eoi eoi Output 32
add_interface_port interrupt irq irq Input 32


# 
# connection point pcpi
# 
add_interface pcpi conduit end
set_interface_property pcpi associatedClock clk
set_interface_property pcpi associatedReset ""
set_interface_property pcpi ENABLED true
set_interface_property pcpi EXPORT_OF ""
set_interface_property pcpi PORT_NAME_MAP ""
set_interface_property pcpi CMSIS_SVD_VARIABLES ""
set_interface_property pcpi SVD_ADDRESS_GROUP ""

add_interface_port pcpi pcpi_insn pcpi_insn Output 32
add_interface_port pcpi pcpi_rd pcpi_rd Input 32
add_interface_port pcpi pcpi_ready pcpi_ready Input 1
add_interface_port pcpi pcpi_rs1 pcpi_rs1 Output 32
add_interface_port pcpi pcpi_rs2 pcpi_rs2 Output 32
add_interface_port pcpi pcpi_valid pcpi_valid Output 1
add_interface_port pcpi pcpi_wait pcpi_wait Input 1
add_interface_port pcpi pcpi_wr pcpi_wr Input 1


# 
# connection point mem_axi
# 
add_interface mem_axi axi4lite start
set_interface_property mem_axi associatedClock clk
set_interface_property mem_axi associatedReset rst
set_interface_property mem_axi readIssuingCapability 1
set_interface_property mem_axi writeIssuingCapability 1
set_interface_property mem_axi combinedIssuingCapability 1
set_interface_property mem_axi ENABLED true
set_interface_property mem_axi EXPORT_OF ""
set_interface_property mem_axi PORT_NAME_MAP ""
set_interface_property mem_axi CMSIS_SVD_VARIABLES ""
set_interface_property mem_axi SVD_ADDRESS_GROUP ""

add_interface_port mem_axi mem_axi_awvalid awvalid Output 1
add_interface_port mem_axi mem_axi_awready awready Input 1
add_interface_port mem_axi mem_axi_awaddr awaddr Output 32
add_interface_port mem_axi mem_axi_awprot awprot Output 3
add_interface_port mem_axi mem_axi_wvalid wvalid Output 1
add_interface_port mem_axi mem_axi_wready wready Input 1
add_interface_port mem_axi mem_axi_wdata wdata Output 32
add_interface_port mem_axi mem_axi_wstrb wstrb Output 4
add_interface_port mem_axi mem_axi_bvalid bvalid Input 1
add_interface_port mem_axi mem_axi_bready bready Output 1
add_interface_port mem_axi mem_axi_arvalid arvalid Output 1
add_interface_port mem_axi mem_axi_arready arready Input 1
add_interface_port mem_axi mem_axi_araddr araddr Output 32
add_interface_port mem_axi mem_axi_arprot arprot Output 3
add_interface_port mem_axi mem_axi_rvalid rvalid Input 1
add_interface_port mem_axi mem_axi_rready rready Output 1
add_interface_port mem_axi mem_axi_rdata rdata Input 32
add_interface_port mem_axi mem_axi_bresp bresp Input 2
add_interface_port mem_axi mem_axi_rresp rresp Input 2


# 
# connection point clk
# 
add_interface clk clock end
set_interface_property clk clockRate 0
set_interface_property clk ENABLED true
set_interface_property clk EXPORT_OF ""
set_interface_property clk PORT_NAME_MAP ""
set_interface_property clk CMSIS_SVD_VARIABLES ""
set_interface_property clk SVD_ADDRESS_GROUP ""

add_interface_port clk clk clk Input 1


# 
# connection point rst
# 
add_interface rst reset end
set_interface_property rst associatedClock clk
set_interface_property rst synchronousEdges DEASSERT
set_interface_property rst ENABLED true
set_interface_property rst EXPORT_OF ""
set_interface_property rst PORT_NAME_MAP ""
set_interface_property rst CMSIS_SVD_VARIABLES ""
set_interface_property rst SVD_ADDRESS_GROUP ""

add_interface_port rst resetn reset_n Input 1

